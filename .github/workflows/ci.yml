name: CI

#on: [push]

# 在master分支发生push事件时触发。
on:
  push:
    branches:
      - master

env: # 设置环境变量
  TZ: Asia/Shanghai # 时区（设置时区可使页面中的`最近更新时间`使用该时区时间）

jobs:
  build: # 自定义名称
    runs-on: ubuntu-latest # 运行在虚拟机环境ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout # 步骤1
        uses: actions/checkout@v1 # 使用的动作。格式：userName/repoName。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions
      - name: Use Node.js ${{ matrix.node-version }} # 步骤2
        uses: actions/setup-node@v3 # 作用：安装nodejs
        with:
          node-version: ${{ matrix.node-version }} # 版本
      - name: Build-and-deploy-github # 步骤3
        run: |
          remote_addr=`git remote get-url --push origin`
          commit_info=`git describe --all --always --long`
          user_name=`git log -1 --pretty=format:'%an'`
          user_email=`git log -1 --pretty=format:'%ae'`
          deploy_branch=gh-pages
          yarn
          yarn build
          cd docs/.vuepress/dist
          git config --global init.defaultBranch $deploy_branch
          git init
          git config user.name ${user_name}
          git config user.email ${user_email}
          git add -A
          git commit -m "auto deploy, $commit_info"
          remote_addr=`echo $remote_addr | awk -F'://' '{print $2}'`
          remote_addr=https://${user_name}:${{secrets.A}}@${remote_addr}
          git remote add origin ${remote_addr}
          git push origin HEAD:$deploy_branch --force # 推送到github $deploy_branch分支

      - name: Build-and-deploy-coding # 步骤4
        run: |
          echo -e "第三步结束\n第四步"
          cd docs/.vuepress/dist
          pwd
          user_name=`git log -1 --pretty=format:'%an'`
          user_email=`git log -1 --pretty=format:'%ae'`
          deploy_branch=gh-pages

          git config --global init.defaultBranch $deploy_branch
          git config user.name ${user_name}
          git config user.email ${user_email}
          remote_addr=https://ptscmuk4ftq7:${{secrets.CODING_TOKEN}}@e.coding.net/youcyt/youcyt/vuepress.git
          echo "url 是 ${remote_addr}"
          git remote set-url origin ${remote_addr}
          commit_info=`git describe --all --always --long`
          echo "b.youcyt.ltd" > CNAME
          git init
          git add .
          git commit -m "aa ${commit_info}"
          git remote -v
          git push origin HEAD:$deploy_branch --force # 推送到github $deploy_branch分支

  upload:
    needs: build # 依赖于build步骤
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cos-python-sdk-v5 # 安装腾讯云COS SDK

      - name: Configure Tencent COS
        env:
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
          TENCENT_REGION: ${{ secrets.TENCENT_REGION }}
          TENCENT_BUCKET: ${{ secrets.TENCENT_BUCKET }}
        run: |
          echo "开始配置COS"
          pwd
          echo "$TENCENT_SECRET_ID" > cos.conf
          echo "$TENCENT_SECRET_KEY" >> cos.conf
          echo "$TENCENT_REGION" >> cos.conf
          echo "$TENCENT_BUCKET" >> cos.conf
          echo "COS配置完成"
          cat cos.conf

      - name: Upload files to Tencent COS
        run: |
          python upload_to_cos.py # 假设您的上传脚本名为upload_to_cos.py
